#!/usr/bin/env python
#-----------------------------------------------------------------------------
# qwiic_micro_oled_hello.py
#
# Simple Example for the Qwiic MicroOLED Device
#------------------------------------------------------------------------
#
# Written by  SparkFun Electronics, May 2019
#
# This python library supports the SparkFun Electroncis qwiic
# qwiic sensor/board ecosystem on a Raspberry Pi (and compatable) single
# board computers.
#
# More information on qwiic is at https:# www.sparkfun.com/qwiic
#
# Do you like this library? Help support SparkFun. Buy a board!
#
#==================================================================================
# Copyright (c) 2019 SparkFun Electronics
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#==================================================================================
# Example - simple command to display a bitmap on the OLED.
#

from __future__ import print_function
import qwiic_micro_oled
import sys
import time

umbrella = [ \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,\
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x80, 0xe0, 0xf0, 0xf0, 0xf8, 0xfc, 0xfc, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xff, 0xff,\
    0xff, 0xff, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xfc, 0xf8, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,\
    0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,\
    0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01,\
    0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0xff, 0xff,\
    0xff, 0x07, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,\
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,\
    0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0f, 0x0e, 0x0e, 0x0f, 0x0f, 0x07,\
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
]

snowflake = [ \
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x78, 0x70, 0xf0, 0xe0, 0xc0, 0xc0, 0xfe, 0xfe,\
    0xfe, 0xc0, 0xe0, 0xe0, 0xf0, 0x70, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x70, 0xf0, 0xe0, 0xe0, 0xc0,\
    0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0xf8, 0xf8, 0xf8, 0xf0, 0xe1, 0xe1, 0xe3, 0xff, 0xff,\
    0xff, 0xe3, 0xe1, 0xf0, 0xf0, 0xf8, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf8, 0xe0,\
    0xe0, 0x70, 0x78, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x38, 0x38, 0x3c, 0x1e, 0x0f, 0x0f,\
    0x87, 0x87, 0xc7, 0xc7, 0xef, 0xfe, 0xfe, 0x7f, 0x7f, 0x7f, 0x78, 0xf0, 0xe1, 0xe3, 0xff, 0xff,\
    0xff, 0xe1, 0xe1, 0xf0, 0x79, 0x7f, 0x3f, 0x7f, 0x7e, 0xfe, 0xe7, 0xe7, 0xc3, 0xc3, 0x87, 0x87,\
    0x0f, 0x0e, 0x1e, 0x3c, 0x3c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x38, 0x70, 0xf0, 0xe0, 0xe1,\
    0xc3, 0xc3, 0xc7, 0xe7, 0xef, 0xff, 0x7e, 0xfc, 0xfc, 0xfc, 0x1e, 0x0f, 0x0f, 0x87, 0xff, 0xff,\
    0xff, 0xcf, 0x0f, 0x0f, 0x1e, 0xfc, 0xfc, 0xfe, 0x7e, 0x7f, 0xe7, 0xe7, 0xc3, 0xc3, 0xe1, 0xf1,\
    0xf0, 0x78, 0x38, 0x3c, 0x1c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x1c, 0x0e, 0x0f, 0x07,\
    0x0f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x3f, 0x3f, 0x1f, 0x1f, 0x0f, 0x87, 0x87, 0xff, 0xff,\
    0xff, 0xcf, 0x87, 0x0f, 0x0f, 0x1f, 0x3f, 0x3f, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0x07,\
    0x07, 0x0f, 0x0e, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
    0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x1e, 0x0e, 0x0f, 0x07, 0x07, 0x7f, 0x7f,\
    0x7f, 0x07, 0x07, 0x07, 0x0f, 0x1e, 0x1e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x00,\
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
]

class OLEDDisplay:
  def __init__(self):
    self.myOLED = qwiic_micro_oled.QwiicMicroOled()

    if not self.myOLED.connected:
      errStr = "The Qwiic Micro OLED device isn't connected to the system. Please check your connection"
      raise Exception(errStr)

    self.myOLED.begin()

  def drawBitmap(self, bitmap):
    #  Before you can start using the OLED, call begin() to init
    #  all of the pins and configure the OLED.

    #  clear(ALL) will clear out the OLED's graphic memory.
    #  clear(PAGE) will clear the Arduino's display buffer.
    self.myOLED.clear(self.myOLED.PAGE)  #  Clear the display's memory (gets rid of artifacts)

    self.myOLED.draw_bitmap(bitmap)
    #  To actually draw anything on the display, you must call the
    #  display() function.
    self.myOLED.display()

  def drawSnowflake(self):
    self.drawBitmap(snowflake)

  def drawUmbrella(self):
    self.drawBitmap(umbrella)

  def clearScreen(self):
    self.myOLED.clear(self.myOLED.PAGE)  #  Clear the display's memory (gets rid of artifacts)
    self.myOLED.display()

  def showTemperature(self, tempVal):
    DEG_ASCII_VAL = 248
    self.myOLED.clear(self.myOLED.PAGE)
    self.myOLED.set_font_type(3)
    self.myOLED.set_cursor(0, 0)
    self.myOLED.print(tempVal)

    self.myOLED.set_font_type(0)
    self.myOLED.write(DEG_ASCII_VAL)

    self.myOLED.set_font_type(4)
    self.myOLED.set_cursor(32, 0)
    self.myOLED.print("F")
    self.myOLED.display()

if __name__ == '__main__':
  try:
    oled = OLEDDisplay()
    oled.drawUmbrella()
    time.sleep(5)
    oled.clearScreen()

  except (KeyboardInterrupt, SystemExit) as exErr:
    print("\nEnding OLED bitmap Example")
    sys.exit(0)
